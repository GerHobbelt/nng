name: Integration
on:
  pull_request:
  push:
    branches: [ master ]
jobs:
  build_and_upload_artifact_for_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies for linux
        run: |
          sudo apt-get install -y ninja-build
      - name: Download mbedtls Linux Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "ilkerhalil/mbedtls"
          version: "tags/v3.0.9"
          file: "mbedtls-linux.tar.gz"
          target: "/tmp/mbedtls-linux.tar.gz"
          token: ${{ github.token }}
      - name: Download mbedtls Headers
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "ilkerhalil/mbedtls"
          version: "tags/v3.0.9"
          file: "mbedtls-headers.tar.gz"
          target: "/tmp/mbedtls-headers.tar.gz"
          token: ${{ github.token }}
      - name: Extract mbedtls
        run: |
          mkdir -p /tmp/mbedtls
          tar -xvf mbedtls-headers.tar.gz -C /tmp/mbedtls
          tar -xvf mbedtls-linux.tar.gz -C /tmp/mbedtls
      - name: Build nng with tls
        run: |
          mkdir build
          cd build
          cmake -G "Unix Makefiles" -DBUILD_SHARED_LIBS=ON \
          -DNNG_ENABLE_TLS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DNNG_ELIDE_DEPRECATED=ON \
          -DMBEDTLS_ROOT_DIR/tmp/mbedtls \
          ..
          cmake --build . --config Release
      - name: Test nng with tls
        run: ctest --output-on-failure
        working-directory: build
      - name: Create Artifact For nng with tls
        run: |
          mkdir -p nng-linux-with-tls
          cp build/libnng.so* nng-linux-with-tls
      - name: Build nng
        run: |
          mkdir build
          cd build
          cmake -G "Unix Makefiles" -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DNNG_ELIDE_DEPRECATED=ON \
          ..
          cmake --build . --config Release
      - name: Test nng
        run: ctest --output-on-failure
        working-directory: build
      - name: Create Artifact For nng
        run: |
          mkdir -p nng-linux
          cp build/libnng.so* nng-linux
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-linux
          path: |
            nng-linux-with-tls/
            nng-linux/
  build_and_upload_artifact_for_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies for macos
        run: |
          brew install mbedtls ninja
      - name: Build nng
        run: |
          mkdir build
          cd build
          cmake -G Ninja \
          -DNNG_ENABLE_TLS=ON \
          ..
          ninja
      - name: Test nng
        run: ctest --output-on-failure
        working-directory: build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-macos
          path: |
            build/libnng.a
            include/
  build_and_upload_artifact_for_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Build nng
        shell: bash
        run: |
          cmake -B build
          cmake --build build
      - name: Test nng
        run: |
          ctest -C Debug --output-on-failure
        working-directory: build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nng-win
          path: |
            build/Debug/nng.lib
            include/